-----------------------------------------------------------------------------------------
--
-- CardPattern.lua
-- Card pattern class.
-- Sets the order of the cards: random and sequential pattern.
-- TODO: need to move getCardNumberBasedOnPattern( cardCounter ) to different class.
--
-----------------------------------------------------------------------------------------

local CardPattern = {}

function CardPattern.new()

	--------------------------------------------------------------
	-- Inherit from parent class.
	--------------------------------------------------------------
	local Super	= require "scripts.classes.Super"	-- Super class.
	local cardPattern = Super.new()
	Super = nil

	--------------------------------------------------------------
	-- Include files.
	--------------------------------------------------------------
	local globalVariable 	= require "scripts.common.global-variable"	-- Global variables.	

	-- Local variables.
	local myCardNumber

	--------------------------------------------------------------
	-- Class methods.
	--------------------------------------------------------------
	
	-- Show cards in random order.
	function cardPattern:randomPattern()
		if ( globalVariable.deckCount ~= nil ) then
			myCardNumber = math.random( globalVariable.deckCount )
		end

		return myCardNumber
	end

	-- Show cards in sequential order.
	function cardPattern:sequentialPattern( myCardNumber )
		if ( myCardNumber == nil ) then
			myCardNumber = 0
		end
		
		if ( myCardNumber < globalVariable.deckCount ) then
			myCardNumber = myCardNumber + 1
		else
			myCardNumber = 0
		end

		return myCardNumber
	end

	--------------------------------------------------------------
	-- Getter and setter methods.
	--------------------------------------------------------------	
	
	-- Display the card pattern.
	function cardPattern:getCardNumberBasedOnPattern( myCardNumber )	
	
		myCardNumber = cardPattern:randomPattern( myCardNumber )

		if ( true == globalVariable.toggleFeatureAssert ) or ( system.getInfo( "environment" ) == "simulator" ) then
			assert( myCardNumber ~= nil, "No card number generated by csrd pattern." )
		end
		
		return myCardNumber
		
	end	
	
	--------------------------------------------------------------
	-- Inherited methods.
	--------------------------------------------------------------
	
	-- Get remove method from parent class.
	cardPattern.superDestroy = cardPattern.destroy
	
	-- Remove cardPattern.
	function cardPattern:destroy()
	
		-- Garbage disposal.
		myCardNumber = nil
		globalVariable = nil
	
		-- Remove object from display.
		cardPattern:removeSelf()
		
		-- Call remove method from parent class.	
		self = self:superDestroy()
	end
	
	--------------------------------------------------------------
	-- Initialize class.
	--------------------------------------------------------------	
	
	cardPattern:start()
	
	return cardPattern
	
end	
	
return CardPattern